name: Server
on: [push]

jobs:
  check_format:
    name: Check Format
    runs-on: ubuntu-latest
    container: dart:2.14
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v1
      - name: Check "bin" Formatting
        run: dart format bin --set-exit-if-changed
        working-directory: ./server
      - name: Check "lib" Formatting
        run: dart format lib --set-exit-if-changed
        working-directory: ./server
      - name: Check "test" Formatting
        run: dart format test --set-exit-if-changed
        working-directory: ./server

  lint:
    name: Lint
    runs-on: ubuntu-latest
    container: dart:2.14
    steps:
      - name: Check out repo
        uses: actions/checkout@v1
      - name: Get Dependencies
        run: pub get
        working-directory: ./server
      - name: Run Code Generation
        run: pub run build_runner build
        working-directory: ./server
      - name: Run Analysis
        run: dart analyze
        working-directory: ./server

  test:
    name: Test
    runs-on: ubuntu-latest
    container: dart:2.14
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v1
      - name: Get dependencies
        run: pub get
        working-directory: ./server
      - name: Run Code Generation
        run: pub run build_runner build
        working-directory: ./server
      - name: Run Tests
        run: dart test
        working-directory: ./server

  push_docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    if: success() && github.ref == 'refs/heads/main'
    needs:
      - check_format
      - lint
      - test
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v1
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build the Tagged Docker Image
        run: docker build -t ghcr.io/bjoernpetersen/opaque-server:${GITHUB_SHA} --build-arg "build=${GITHUB_SHA}" -f server/Dockerfile .
      - name: Push the Tagged Docker Image
        run: docker push ghcr.io/bjoernpetersen/opaque-server:${GITHUB_SHA}
